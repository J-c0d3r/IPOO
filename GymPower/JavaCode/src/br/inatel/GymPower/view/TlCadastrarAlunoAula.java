package br.inatel.GymPower.view;

import br.inatel.GymPower.DAO.AulaAlunoProfDAO;
import br.inatel.GymPower.DAO.AulaDAO;
import br.inatel.GymPower.controller.AlunoController;
import br.inatel.GymPower.controller.AulaController;
import br.inatel.GymPower.model.Aluno;
import br.inatel.GymPower.model.Aula;
import br.inatel.GymPower.model.AulaAlunoProf;
import br.inatel.GymPower.model.Bale;
import br.inatel.GymPower.model.KungFu;
import br.inatel.GymPower.model.Musculacao;
import br.inatel.GymPower.model.Natacao;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class TlCadastrarAlunoAula extends javax.swing.JPanel {

    AlunoController alunoController = new AlunoController();
    AulaController aulaController = new AulaController();
    AulaAlunoProfDAO aapDAO = new AulaAlunoProfDAO();
    AulaDAO aulaDAO = new AulaDAO();

    public TlCadastrarAlunoAula() {
        initComponents();
        Aula aula;

        ArrayList<Aula> listaAulas = aulaController.buscaAulas();
        cmbNomeAula.removeAllItems();
        for (int i = 0; i < listaAulas.size(); i++) {
            cmbNomeAula.addItem(listaAulas.get(i).getNome());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMatAluno = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbNomeAula = new javax.swing.JComboBox<>();
        btnOk = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMatAluno2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cmbNomeAula2 = new javax.swing.JComboBox<>();
        btnRemover = new javax.swing.JButton();
        btnBusca = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Cadastrar Aluno na Aula");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Matrícula do Aluno");

        txtMatAluno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Nome da Aula");

        cmbNomeAula.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        cmbNomeAula.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmbNomeAula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNomeAulaActionPerformed(evt);
            }
        });

        btnOk.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnOk.setText("Cadastrar");
        btnOk.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMatAluno)
                                .addComponent(cmbNomeAula, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMatAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cmbNomeAula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addGap(31, 31, 31))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("Remover Aluno na Aula");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Matrícula do Aluno");

        txtMatAluno2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Nome da Aula");

        cmbNomeAula2.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        cmbNomeAula2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmbNomeAula2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNomeAula2ActionPerformed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnBusca.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnBusca.setText("Buscar");
        btnBusca.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMatAluno2)
                                    .addComponent(cmbNomeAula2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(46, 46, 46)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMatAluno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(btnBusca))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(cmbNomeAula2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(btnRemover)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        Aluno aluno = null;
        Aula aula = null;

        //Pegar matrícula e verificar se é válida
        String matriculaTexto = txtMatAluno.getText();
        int matricula = alunoController.verificaMatricula(matriculaTexto);

        if (matricula != -1) {
            //Verificar se aluno existe
            Aluno aux = new Aluno();
            aux.setMatricula(matricula);

            aluno = alunoController.busca(aux);
        }

        //Pegar aula selecionada
        String nomeAula = cmbNomeAula.getSelectedItem() + "";

        //Criando objeto da aula
        if (nomeAula.contains("K")) {
            aula = new KungFu();
        } else if (nomeAula.contains("N")) {
            aula = new Natacao();
        } else if (nomeAula.contains("M")) {
            aula = new Musculacao();
        } else if (nomeAula.contains("B")) {
            aula = new Bale();
        }

        if (aluno != null && aula != null) {
            aula.setNome(nomeAula);

            //Verificar se tem vaga e se o aluno não está cadastrado na aula já
            if (!aulaController.verificaVagas(aula)) {
                JOptionPane.showMessageDialog(null, "Aula Lotada!!!");
            } else if (!aulaController.verificaAlunoAula(aluno, aula)) {
                JOptionPane.showMessageDialog(null, "Aluno já cadastrado nessa aula!!!");
            } else if (aulaController.buscarAula(aula.getNome()).getInstrutorMatricula() == 0) {
                JOptionPane.showMessageDialog(null, "No momento essa aula está sem professor, aguarde até que um novo professor seja designado para a turma");
            } else {
                aulaController.cadastraAluno(aluno, aula);
                //Provisório para poder calcular a mensalidade
                aluno.setQtdAulas(aluno.getQtdAulas() + 1);
                alunoController.calcMensalidade(aluno.getMatricula());
            }
            txtMatAluno.setText(null);
            cmbNomeAula.setSelectedIndex(0);
        }

    }//GEN-LAST:event_btnOkActionPerformed

    private void cmbNomeAulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNomeAulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbNomeAulaActionPerformed

    private void cmbNomeAula2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNomeAula2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbNomeAula2ActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed

        Aluno aluno = null;

        //Pegar matrícula e verificar se é válida
        String matriculaTexto = txtMatAluno2.getText();
        int matricula = alunoController.verificaMatricula(matriculaTexto);

        if (matricula != -1) {
            //Verificar se aluno existe
            Aluno aux = new Aluno();
            aux.setMatricula(matricula);

            aluno = alunoController.busca(aux);
        }

        //Pegar aula
        String aulaNome = null;
        try {
            aulaNome = cmbNomeAula2.getSelectedItem().toString();
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Nunhuma aula selecionada");
        }
        //Verificar se aluno está na aula
        if (aluno != null && aulaNome != null) {
            boolean matriculado = false;
            ArrayList<AulaAlunoProf> listaAAP = aapDAO.buscaAulaAlunoProf(matricula);

            //Verificando se aluno está na aula
            if (listaAAP.size() != 0) {
                for (int i = 0; i < listaAAP.size(); i++) {
                    if (listaAAP.get(i).aula.getNome().contains(aulaNome)) {
                        matriculado = true;
                        break;
                    }
                }
            }

            if (matriculado) {
                JOptionPane.showMessageDialog(null, "Removendo");
                aulaDAO.removeAlunoAula(aluno.getMatricula(), aulaNome);
                alunoController.calcMensalidade(aluno.getMatricula());
            } else {
                JOptionPane.showMessageDialog(null, "O aluno " + matricula + " não está cadastrado na aula " + aulaNome + "\nClique em BUSCAR para ver as aulas em que o aluno está cadastrado");
            }
        }

        //remover aluno da aula
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaActionPerformed

        Aluno aluno = null;
        cmbNomeAula2.removeAllItems();

        //Pegar matrícula e verificar se é válida
        String matriculaTexto = txtMatAluno2.getText();
        int matricula = alunoController.verificaMatricula(matriculaTexto);

        if (matricula != -1) {
            //Verificar se aluno existe
            Aluno aux = new Aluno();
            aux.setMatricula(matricula);

            aluno = alunoController.busca(aux);
        }

        //Se o aluno existir, setar as aulas
        if (aluno != null) {
            ArrayList<AulaAlunoProf> listaAAP = aapDAO.buscaAulaAlunoProf(matricula);

            for (int i = 0; i < listaAAP.size(); i++) {
                cmbNomeAula2.addItem(listaAAP.get(i).aula.getNome());
            }
        }

    }//GEN-LAST:event_btnBuscaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBusca;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnRemover;
    private javax.swing.JComboBox<String> cmbNomeAula;
    private javax.swing.JComboBox<String> cmbNomeAula2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtMatAluno;
    private javax.swing.JTextField txtMatAluno2;
    // End of variables declaration//GEN-END:variables
}
